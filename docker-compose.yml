version: '3.8'

services:
  # Main Python application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: python-app
    ports:
      - "5000:5000"  # Flask default port
      - "8000:8000"  # FastAPI default port
    volumes:
      - .:/app
      - ./data:/app/data
      - ./output:/app/output
      - ./logs:/app/logs
    environment:
      - PYTHONPATH=/app
      - FLASK_ENV=development
      - DEBUG=True
    env_file:
      - .env
    command: python main.py
    restart: unless-stopped

  # Jupyter notebook service
  jupyter:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: jupyter-notebook
    ports:
      - "8888:8888"
    volumes:
      - .:/app
      - ./data:/app/data
      - ./output:/app/output
      - ./logs:/app/logs
    environment:
      - PYTHONPATH=/app
      - JUPYTER_ENABLE_LAB=yes
    env_file:
      - .env
    command: jupyter notebook --ip=0.0.0.0 --port=8888 --no-browser --allow-root --NotebookApp.token='' --NotebookApp.password=''
    restart: unless-stopped

  # PostgreSQL database (optional)
  postgres:
    image: postgres:15
    container_name: postgres-db
    environment:
      POSTGRES_DB: pythonapp
      POSTGRES_USER: pythonuser
      POSTGRES_PASSWORD: pythonpass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  # Redis cache (optional)
  redis:
    image: redis:7-alpine
    container_name: redis-cache
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data: 